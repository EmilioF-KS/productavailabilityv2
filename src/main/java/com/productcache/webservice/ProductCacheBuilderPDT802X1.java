
package com.productcache.webservice;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ProductCacheBuilderPDT802X1", targetNamespace = "http://ei/product/product_cache_builder_pdt802x1")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProductCacheBuilderPDT802X1 {


    /**
     * 
     * @param getAndCacheProductRequest
     * @return
     *     returns com.productcache.webservice.GetAndCacheProductReply
     * @throws GetAndCacheProductSimpleFaultReplyMsg
     */
    @WebMethod(operationName = "GetAndCacheProduct", action = "GetAndCacheProduct")
    @WebResult(name = "GetAndCacheProductReply", targetNamespace = "")
    @RequestWrapper(localName = "GetAndCacheProduct", targetNamespace = "http://ei/product/product_cache_builder_pdt802x1", className = "com.productcache.webservice.GetAndCacheProduct")
    @ResponseWrapper(localName = "GetAndCacheProductResponse", targetNamespace = "http://ei/product/product_cache_builder_pdt802x1", className = "com.productcache.webservice.GetAndCacheProductResponse")
    public GetAndCacheProductReply getAndCacheProduct(
        @WebParam(name = "GetAndCacheProductRequest", targetNamespace = "")
        GetAndCacheProductRequest getAndCacheProductRequest)
        throws GetAndCacheProductSimpleFaultReplyMsg
    ;

}
